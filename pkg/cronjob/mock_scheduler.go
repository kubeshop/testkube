// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubeshop/testkube/pkg/cronjob (interfaces: Interface)
//
// Generated by this command:
//
//	mockgen -destination=./mock_scheduler.go -package=cronjob github.com/kubeshop/testkube/pkg/cronjob Interface
//

// Package cronjob is a generated GoMock package.
package cronjob

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
	isgomock struct{}
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Reconcile mocks base method.
func (m *MockInterface) Reconcile(ctx context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Reconcile", ctx)
}

// Reconcile indicates an expected call of Reconcile.
func (mr *MockInterfaceMockRecorder) Reconcile(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Reconcile", reflect.TypeOf((*MockInterface)(nil).Reconcile), ctx)
}

// ReconcileTestWorkflowTemplates mocks base method.
func (m *MockInterface) ReconcileTestWorkflowTemplates(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReconcileTestWorkflowTemplates", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReconcileTestWorkflowTemplates indicates an expected call of ReconcileTestWorkflowTemplates.
func (mr *MockInterfaceMockRecorder) ReconcileTestWorkflowTemplates(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReconcileTestWorkflowTemplates", reflect.TypeOf((*MockInterface)(nil).ReconcileTestWorkflowTemplates), ctx)
}

// ReconcileTestWorkflows mocks base method.
func (m *MockInterface) ReconcileTestWorkflows(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReconcileTestWorkflows", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReconcileTestWorkflows indicates an expected call of ReconcileTestWorkflows.
func (mr *MockInterfaceMockRecorder) ReconcileTestWorkflows(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReconcileTestWorkflows", reflect.TypeOf((*MockInterface)(nil).ReconcileTestWorkflows), ctx)
}
