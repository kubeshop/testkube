// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubeshop/testkube/pkg/event/kind/webhook (interfaces: WebhookClient)
//
// Generated by this command:
//
//	mockgen -destination=./mock_webhook_client.go -package=webhook github.com/kubeshop/testkube/pkg/event/kind/webhook WebhookClient
//

// Package webhook is a generated GoMock package.
package webhook

import (
	reflect "reflect"

	v1 "github.com/kubeshop/testkube/api/executor/v1"
	gomock "go.uber.org/mock/gomock"
)

// MockWebhookClient is a mock of WebhookClient interface.
type MockWebhookClient struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookClientMockRecorder
	isgomock struct{}
}

// MockWebhookClientMockRecorder is the mock recorder for MockWebhookClient.
type MockWebhookClientMockRecorder struct {
	mock *MockWebhookClient
}

// NewMockWebhookClient creates a new mock instance.
func NewMockWebhookClient(ctrl *gomock.Controller) *MockWebhookClient {
	mock := &MockWebhookClient{ctrl: ctrl}
	mock.recorder = &MockWebhookClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookClient) EXPECT() *MockWebhookClientMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockWebhookClient) List(selector string) (*v1.WebhookList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", selector)
	ret0, _ := ret[0].(*v1.WebhookList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockWebhookClientMockRecorder) List(selector any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockWebhookClient)(nil).List), selector)
}
