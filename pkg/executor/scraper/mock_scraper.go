// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubeshop/testkube/pkg/executor/scraper (interfaces: Scraper)
//
// Generated by this command:
//
//	mockgen -destination=./mock_scraper.go -package=scraper github.com/kubeshop/testkube/pkg/executor/scraper Scraper
//

// Package scraper is a generated GoMock package.
package scraper

import (
	context "context"
	reflect "reflect"

	testkube "github.com/kubeshop/testkube/pkg/api/v1/testkube"
	gomock "go.uber.org/mock/gomock"
)

// MockScraper is a mock of Scraper interface.
type MockScraper struct {
	ctrl     *gomock.Controller
	recorder *MockScraperMockRecorder
	isgomock struct{}
}

// MockScraperMockRecorder is the mock recorder for MockScraper.
type MockScraperMockRecorder struct {
	mock *MockScraper
}

// NewMockScraper creates a new mock instance.
func NewMockScraper(ctrl *gomock.Controller) *MockScraper {
	mock := &MockScraper{ctrl: ctrl}
	mock.recorder = &MockScraperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScraper) EXPECT() *MockScraperMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockScraper) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockScraperMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockScraper)(nil).Close))
}

// Scrape mocks base method.
func (m *MockScraper) Scrape(ctx context.Context, paths, masks []string, execution testkube.Execution) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Scrape", ctx, paths, masks, execution)
	ret0, _ := ret[0].(error)
	return ret0
}

// Scrape indicates an expected call of Scrape.
func (mr *MockScraperMockRecorder) Scrape(ctx, paths, masks, execution any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Scrape", reflect.TypeOf((*MockScraper)(nil).Scrape), ctx, paths, masks, execution)
}
