// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: testkube/testworkflow/signature/v1/signature.proto

package signaturev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Signature is a representation of a step of a Test Workflow.
type Signature struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ref is the unique reference for the step in the Test Workflow.
	Ref *string `protobuf:"bytes,1,opt,name=ref" json:"ref,omitempty"`
	// name is a human friendly name for the step.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// category, no idea really, could be a test type e.g. "unit", "integration", or could be the
	// name of the step e.g. "Run shell command", "Fetch tarball". Probably don't rely on this
	// value to actually mean anything.
	Category *string `protobuf:"bytes,3,opt,name=category" json:"category,omitempty"`
	// optional indicates whether this step is optional or not for the success of the Test Workflow.
	Optional *bool `protobuf:"varint,4,opt,name=optional" json:"optional,omitempty"`
	// negative indicates whether or not this step should pass (default) or fail (negative == true)
	// for this step of the Test Workflow to be considered successful.
	Negative *bool `protobuf:"varint,5,opt,name=negative" json:"negative,omitempty"`
	// children refers to any other steps that may be executed as part of this step.
	Children      []*Signature `protobuf:"bytes,7,rep,name=children" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Signature) Reset() {
	*x = Signature{}
	mi := &file_testkube_testworkflow_signature_v1_signature_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_testkube_testworkflow_signature_v1_signature_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_testkube_testworkflow_signature_v1_signature_proto_rawDescGZIP(), []int{0}
}

func (x *Signature) GetRef() string {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return ""
}

func (x *Signature) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Signature) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *Signature) GetOptional() bool {
	if x != nil && x.Optional != nil {
		return *x.Optional
	}
	return false
}

func (x *Signature) GetNegative() bool {
	if x != nil && x.Negative != nil {
		return *x.Negative
	}
	return false
}

func (x *Signature) GetChildren() []*Signature {
	if x != nil {
		return x.Children
	}
	return nil
}

var File_testkube_testworkflow_signature_v1_signature_proto protoreflect.FileDescriptor

const file_testkube_testworkflow_signature_v1_signature_proto_rawDesc = "" +
	"\n" +
	"2testkube/testworkflow/signature/v1/signature.proto\x12\"testkube.testworkflow.signature.v1\"\xd0\x01\n" +
	"\tSignature\x12\x10\n" +
	"\x03ref\x18\x01 \x01(\tR\x03ref\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12\x1a\n" +
	"\boptional\x18\x04 \x01(\bR\boptional\x12\x1a\n" +
	"\bnegative\x18\x05 \x01(\bR\bnegative\x12I\n" +
	"\bchildren\x18\a \x03(\v2-.testkube.testworkflow.signature.v1.SignatureR\bchildrenB\xba\x02\n" +
	"&com.testkube.testworkflow.signature.v1B\x0eSignatureProtoP\x01ZUgithub.com/kubeshop/testkube/pkg/proto/testkube/testworkflow/signature/v1;signaturev1\xa2\x02\x03TTS\xaa\x02\"Testkube.Testworkflow.Signature.V1\xca\x02\"Testkube\\Testworkflow\\Signature\\V1\xe2\x02.Testkube\\Testworkflow\\Signature\\V1\\GPBMetadata\xea\x02%Testkube::Testworkflow::Signature::V1b\beditionsp\xe8\a"

var (
	file_testkube_testworkflow_signature_v1_signature_proto_rawDescOnce sync.Once
	file_testkube_testworkflow_signature_v1_signature_proto_rawDescData []byte
)

func file_testkube_testworkflow_signature_v1_signature_proto_rawDescGZIP() []byte {
	file_testkube_testworkflow_signature_v1_signature_proto_rawDescOnce.Do(func() {
		file_testkube_testworkflow_signature_v1_signature_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_testkube_testworkflow_signature_v1_signature_proto_rawDesc), len(file_testkube_testworkflow_signature_v1_signature_proto_rawDesc)))
	})
	return file_testkube_testworkflow_signature_v1_signature_proto_rawDescData
}

var file_testkube_testworkflow_signature_v1_signature_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_testkube_testworkflow_signature_v1_signature_proto_goTypes = []any{
	(*Signature)(nil), // 0: testkube.testworkflow.signature.v1.Signature
}
var file_testkube_testworkflow_signature_v1_signature_proto_depIdxs = []int32{
	0, // 0: testkube.testworkflow.signature.v1.Signature.children:type_name -> testkube.testworkflow.signature.v1.Signature
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_testkube_testworkflow_signature_v1_signature_proto_init() }
func file_testkube_testworkflow_signature_v1_signature_proto_init() {
	if File_testkube_testworkflow_signature_v1_signature_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_testkube_testworkflow_signature_v1_signature_proto_rawDesc), len(file_testkube_testworkflow_signature_v1_signature_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_testkube_testworkflow_signature_v1_signature_proto_goTypes,
		DependencyIndexes: file_testkube_testworkflow_signature_v1_signature_proto_depIdxs,
		MessageInfos:      file_testkube_testworkflow_signature_v1_signature_proto_msgTypes,
	}.Build()
	File_testkube_testworkflow_signature_v1_signature_proto = out.File
	file_testkube_testworkflow_signature_v1_signature_proto_goTypes = nil
	file_testkube_testworkflow_signature_v1_signature_proto_depIdxs = nil
}
