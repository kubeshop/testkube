// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubeshop/testkube/pkg/operator/client/testsuiteexecutions/v1 (interfaces: Interface)
//
// Generated by this command:
//
//	mockgen -destination=./mock_testsuiteexecutions.go -package=testsuiteexecutions github.com/kubeshop/testkube/pkg/operator/client/testsuiteexecutions/v1 Interface
//

// Package testsuiteexecutions is a generated GoMock package.
package testsuiteexecutions

import (
	reflect "reflect"

	v1 "github.com/kubeshop/testkube/api/testsuiteexecution/v1"
	gomock "go.uber.org/mock/gomock"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
	isgomock struct{}
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockInterface) Create(testSuiteExecution *v1.TestSuiteExecution) (*v1.TestSuiteExecution, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", testSuiteExecution)
	ret0, _ := ret[0].(*v1.TestSuiteExecution)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockInterfaceMockRecorder) Create(testSuiteExecution any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockInterface)(nil).Create), testSuiteExecution)
}

// Delete mocks base method.
func (m *MockInterface) Delete(name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", name)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockInterfaceMockRecorder) Delete(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockInterface)(nil).Delete), name)
}

// Get mocks base method.
func (m *MockInterface) Get(name string) (*v1.TestSuiteExecution, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", name)
	ret0, _ := ret[0].(*v1.TestSuiteExecution)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockInterfaceMockRecorder) Get(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockInterface)(nil).Get), name)
}

// Update mocks base method.
func (m *MockInterface) Update(testSuiteExecution *v1.TestSuiteExecution) (*v1.TestSuiteExecution, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", testSuiteExecution)
	ret0, _ := ret[0].(*v1.TestSuiteExecution)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockInterfaceMockRecorder) Update(testSuiteExecution any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockInterface)(nil).Update), testSuiteExecution)
}

// UpdateStatus mocks base method.
func (m *MockInterface) UpdateStatus(testSuite햇xecution *v1.TestSuiteExecution) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateStatus", testSuite햇xecution)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateStatus indicates an expected call of UpdateStatus.
func (mr *MockInterfaceMockRecorder) UpdateStatus(testSuite햇xecution any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStatus", reflect.TypeOf((*MockInterface)(nil).UpdateStatus), testSuite햇xecution)
}
