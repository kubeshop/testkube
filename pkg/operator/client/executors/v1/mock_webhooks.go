// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubeshop/testkube/pkg/operator/client/executors/v1 (interfaces: WebhooksInterface)

// Package executors is a generated GoMock package.
package executors

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/kubeshop/testkube/api/executor/v1"
)

// MockWebhooksInterface is a mock of WebhooksInterface interface.
type MockWebhooksInterface struct {
	ctrl     *gomock.Controller
	recorder *MockWebhooksInterfaceMockRecorder
}

// MockWebhooksInterfaceMockRecorder is the mock recorder for MockWebhooksInterface.
type MockWebhooksInterfaceMockRecorder struct {
	mock *MockWebhooksInterface
}

// NewMockWebhooksInterface creates a new mock instance.
func NewMockWebhooksInterface(ctrl *gomock.Controller) *MockWebhooksInterface {
	mock := &MockWebhooksInterface{ctrl: ctrl}
	mock.recorder = &MockWebhooksInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhooksInterface) EXPECT() *MockWebhooksInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockWebhooksInterface) Create(arg0 *v1.Webhook) (*v1.Webhook, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*v1.Webhook)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockWebhooksInterfaceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockWebhooksInterface)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockWebhooksInterface) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockWebhooksInterfaceMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockWebhooksInterface)(nil).Delete), arg0)
}

// DeleteByLabels mocks base method.
func (m *MockWebhooksInterface) DeleteByLabels(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteByLabels", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteByLabels indicates an expected call of DeleteByLabels.
func (mr *MockWebhooksInterfaceMockRecorder) DeleteByLabels(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteByLabels", reflect.TypeOf((*MockWebhooksInterface)(nil).DeleteByLabels), arg0)
}

// Get mocks base method.
func (m *MockWebhooksInterface) Get(arg0 string) (*v1.Webhook, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*v1.Webhook)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockWebhooksInterfaceMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockWebhooksInterface)(nil).Get), arg0)
}

// GetByEvent mocks base method.
func (m *MockWebhooksInterface) GetByEvent(arg0 v1.EventType) (*v1.WebhookList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByEvent", arg0)
	ret0, _ := ret[0].(*v1.WebhookList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByEvent indicates an expected call of GetByEvent.
func (mr *MockWebhooksInterfaceMockRecorder) GetByEvent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByEvent", reflect.TypeOf((*MockWebhooksInterface)(nil).GetByEvent), arg0)
}

// List mocks base method.
func (m *MockWebhooksInterface) List(arg0 string) (*v1.WebhookList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].(*v1.WebhookList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockWebhooksInterfaceMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockWebhooksInterface)(nil).List), arg0)
}

// Update mocks base method.
func (m *MockWebhooksInterface) Update(arg0 *v1.Webhook) (*v1.Webhook, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(*v1.Webhook)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockWebhooksInterfaceMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockWebhooksInterface)(nil).Update), arg0)
}
