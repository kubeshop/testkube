// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubeshop/testkube/pkg/operator/client/executors/v1 (interfaces: WebhooksInterface)
//
// Generated by this command:
//
//	mockgen -destination=./mock_webhooks.go -package=executors github.com/kubeshop/testkube/pkg/operator/client/executors/v1 WebhooksInterface
//

// Package executors is a generated GoMock package.
package executors

import (
	reflect "reflect"

	v1 "github.com/kubeshop/testkube/api/executor/v1"
	gomock "go.uber.org/mock/gomock"
)

// MockWebhooksInterface is a mock of WebhooksInterface interface.
type MockWebhooksInterface struct {
	ctrl     *gomock.Controller
	recorder *MockWebhooksInterfaceMockRecorder
	isgomock struct{}
}

// MockWebhooksInterfaceMockRecorder is the mock recorder for MockWebhooksInterface.
type MockWebhooksInterfaceMockRecorder struct {
	mock *MockWebhooksInterface
}

// NewMockWebhooksInterface creates a new mock instance.
func NewMockWebhooksInterface(ctrl *gomock.Controller) *MockWebhooksInterface {
	mock := &MockWebhooksInterface{ctrl: ctrl}
	mock.recorder = &MockWebhooksInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhooksInterface) EXPECT() *MockWebhooksInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockWebhooksInterface) Create(webhook *v1.Webhook) (*v1.Webhook, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", webhook)
	ret0, _ := ret[0].(*v1.Webhook)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockWebhooksInterfaceMockRecorder) Create(webhook any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockWebhooksInterface)(nil).Create), webhook)
}

// Delete mocks base method.
func (m *MockWebhooksInterface) Delete(name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", name)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockWebhooksInterfaceMockRecorder) Delete(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockWebhooksInterface)(nil).Delete), name)
}

// DeleteByLabels mocks base method.
func (m *MockWebhooksInterface) DeleteByLabels(selector string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteByLabels", selector)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteByLabels indicates an expected call of DeleteByLabels.
func (mr *MockWebhooksInterfaceMockRecorder) DeleteByLabels(selector any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteByLabels", reflect.TypeOf((*MockWebhooksInterface)(nil).DeleteByLabels), selector)
}

// Get mocks base method.
func (m *MockWebhooksInterface) Get(name string) (*v1.Webhook, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", name)
	ret0, _ := ret[0].(*v1.Webhook)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockWebhooksInterfaceMockRecorder) Get(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockWebhooksInterface)(nil).Get), name)
}

// GetByEvent mocks base method.
func (m *MockWebhooksInterface) GetByEvent(event v1.EventType) (*v1.WebhookList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByEvent", event)
	ret0, _ := ret[0].(*v1.WebhookList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByEvent indicates an expected call of GetByEvent.
func (mr *MockWebhooksInterfaceMockRecorder) GetByEvent(event any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByEvent", reflect.TypeOf((*MockWebhooksInterface)(nil).GetByEvent), event)
}

// List mocks base method.
func (m *MockWebhooksInterface) List(selector string) (*v1.WebhookList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", selector)
	ret0, _ := ret[0].(*v1.WebhookList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockWebhooksInterfaceMockRecorder) List(selector any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockWebhooksInterface)(nil).List), selector)
}

// Update mocks base method.
func (m *MockWebhooksInterface) Update(webhook *v1.Webhook) (*v1.Webhook, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", webhook)
	ret0, _ := ret[0].(*v1.Webhook)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockWebhooksInterfaceMockRecorder) Update(webhook any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockWebhooksInterface)(nil).Update), webhook)
}
