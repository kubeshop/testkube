-- Code generated by AI Assistant

-- name: FindLeaseById :one
SELECT id, identifier, cluster_id, acquired_at, renewed_at, created_at, updated_at
FROM leases 
WHERE id = @lease_id;

-- name: InsertLease :one
INSERT INTO leases (id, identifier, cluster_id, acquired_at, renewed_at)
VALUES (@id, @identifier, @cluster_id, @acquired_at, @renewed_at)
RETURNING id, identifier, cluster_id, acquired_at, renewed_at, created_at, updated_at;

-- name: UpdateLease :one
UPDATE leases 
SET 
    identifier = @identifier,
    cluster_id = @cluster_id,
    acquired_at = @acquired_at,
    renewed_at = @renewed_at,
    updated_at = NOW()
WHERE id = @id
RETURNING id, identifier, cluster_id, acquired_at, renewed_at, created_at, updated_at;

-- name: UpsertLease :one
INSERT INTO leases (id, identifier, cluster_id, acquired_at, renewed_at)
VALUES (@id, @identifier, @cluster_id, @acquired_at, @renewed_at)
ON CONFLICT (id) DO UPDATE SET
    identifier = EXCLUDED.identifier,
    cluster_id = EXCLUDED.cluster_id,
    acquired_at = EXCLUDED.acquired_at,
    renewed_at = EXCLUDED.renewed_at,
    updated_at = NOW()
RETURNING id, identifier, cluster_id, acquired_at, renewed_at, created_at, updated_at;

-- name: GetLeaseByClusterId :one
SELECT id, identifier, cluster_id, acquired_at, renewed_at, created_at, updated_at
FROM leases 
WHERE cluster_id = @cluster_id;

-- name: GetLeasesByIdentifier :many
SELECT id, identifier, cluster_id, acquired_at, renewed_at, created_at, updated_at
FROM leases 
WHERE identifier = @identifier
ORDER BY renewed_at DESC;

-- name: GetExpiredLeases :many
SELECT id, identifier, cluster_id, acquired_at, renewed_at, created_at, updated_at
FROM leases 
WHERE renewed_at < @expiration_time
ORDER BY renewed_at ASC;

-- name: DeleteLease :exec
DELETE FROM leases WHERE id = @id;

-- name: DeleteLeasesByClusterId :exec
DELETE FROM leases WHERE cluster_id = @cluster_id;

-- name: DeleteExpiredLeases :exec
DELETE FROM leases WHERE renewed_at < @expiration_time;

-- name: GetAllLeases :many
SELECT id, identifier, cluster_id, acquired_at, renewed_at, created_at, updated_at
FROM leases 
ORDER BY renewed_at DESC;

-- name: CountLeasesByClusterId :one
SELECT COUNT(*) FROM leases WHERE cluster_id = @cluster_id;

-- name: GetLatestLeaseByIdentifierAndCluster :one
SELECT id, identifier, cluster_id, acquired_at, renewed_at, created_at, updated_at
FROM leases 
WHERE identifier = @identifier AND cluster_id = @cluster_id
ORDER BY renewed_at DESC
LIMIT 1;
