// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubeshop/testkube/pkg/testworkflows/testworkflowexecutor (interfaces: TestWorkflowExecutor)
//
// Generated by this command:
//
//	mockgen -destination=./executor_mock.go -package=testworkflowexecutor github.com/kubeshop/testkube/pkg/testworkflows/testworkflowexecutor TestWorkflowExecutor
//

// Package testworkflowexecutor is a generated GoMock package.
package testworkflowexecutor

import (
	context "context"
	reflect "reflect"

	testkube "github.com/kubeshop/testkube/pkg/api/v1/testkube"
	cloud "github.com/kubeshop/testkube/pkg/cloud"
	gomock "go.uber.org/mock/gomock"
)

// MockTestWorkflowExecutor is a mock of TestWorkflowExecutor interface.
type MockTestWorkflowExecutor struct {
	ctrl     *gomock.Controller
	recorder *MockTestWorkflowExecutorMockRecorder
	isgomock struct{}
}

// MockTestWorkflowExecutorMockRecorder is the mock recorder for MockTestWorkflowExecutor.
type MockTestWorkflowExecutorMockRecorder struct {
	mock *MockTestWorkflowExecutor
}

// NewMockTestWorkflowExecutor creates a new mock instance.
func NewMockTestWorkflowExecutor(ctrl *gomock.Controller) *MockTestWorkflowExecutor {
	mock := &MockTestWorkflowExecutor{ctrl: ctrl}
	mock.recorder = &MockTestWorkflowExecutorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTestWorkflowExecutor) EXPECT() *MockTestWorkflowExecutorMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockTestWorkflowExecutor) Execute(ctx context.Context, req *cloud.ScheduleRequest) ([]testkube.TestWorkflowExecution, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", ctx, req)
	ret0, _ := ret[0].([]testkube.TestWorkflowExecution)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Execute indicates an expected call of Execute.
func (mr *MockTestWorkflowExecutorMockRecorder) Execute(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockTestWorkflowExecutor)(nil).Execute), ctx, req)
}
