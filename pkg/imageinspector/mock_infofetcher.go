// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubeshop/testkube/pkg/imageinspector (interfaces: InfoFetcher)
//
// Generated by this command:
//
//	mockgen -destination=./mock_infofetcher.go -package=imageinspector github.com/kubeshop/testkube/pkg/imageinspector InfoFetcher
//

// Package imageinspector is a generated GoMock package.
package imageinspector

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// MockInfoFetcher is a mock of InfoFetcher interface.
type MockInfoFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockInfoFetcherMockRecorder
	isgomock struct{}
}

// MockInfoFetcherMockRecorder is the mock recorder for MockInfoFetcher.
type MockInfoFetcherMockRecorder struct {
	mock *MockInfoFetcher
}

// NewMockInfoFetcher creates a new mock instance.
func NewMockInfoFetcher(ctrl *gomock.Controller) *MockInfoFetcher {
	mock := &MockInfoFetcher{ctrl: ctrl}
	mock.recorder = &MockInfoFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInfoFetcher) EXPECT() *MockInfoFetcherMockRecorder {
	return m.recorder
}

// Fetch mocks base method.
func (m *MockInfoFetcher) Fetch(ctx context.Context, registry, image string, pullSecrets []v1.Secret) (*Info, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fetch", ctx, registry, image, pullSecrets)
	ret0, _ := ret[0].(*Info)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Fetch indicates an expected call of Fetch.
func (mr *MockInfoFetcherMockRecorder) Fetch(ctx, registry, image, pullSecrets any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fetch", reflect.TypeOf((*MockInfoFetcher)(nil).Fetch), ctx, registry, image, pullSecrets)
}
