apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-cypress-incorrect-repo-path
  labels:
    core-tests: expected-fail
description: default no-cone mode
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/some-incorrect-path # no-cone won't fail here
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/some-incorrect-path
  steps:
  - name: Run tests
    run:
      image: cypress/included:13.6.4
      args:
      - --env
      - NON_CYPRESS_ENV=NON_CYPRESS_ENV_value
      - --config
      - '{"screenshotsFolder":"/data/artifacts/screenshots","videosFolder":"/data/artifacts/videos"}'
      env:
      - name: CYPRESS_CUSTOM_ENV
        value: CYPRESS_CUSTOM_ENV_value
    artifacts:
      workingDir: /data/artifacts
      paths:
      - '**/*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-cypress-incorrect-repo-path-cone-mode
  labels:
    core-tests: expected-fail
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      cone: true
      paths:
      - test/cypress/some-incorrect-path # cone mode will fail here
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/cypress-13
  steps:
  - name: Run tests
    run:
      image: cypress/included:13.6.4
      args:
      - --env
      - NON_CYPRESS_ENV=NON_CYPRESS_ENV_value
      - --config
      - '{"screenshotsFolder":"/data/artifacts/screenshots","videosFolder":"/data/artifacts/videos"}'
      env:
      - name: CYPRESS_CUSTOM_ENV
        value: CYPRESS_CUSTOM_ENV_value
    artifacts:
      workingDir: /data/artifacts
      paths:
      - '**/*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-cypress-incorrect-image-name
  labels:
    core-tests: expected-fail
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/cypress-13
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/cypress-13
  steps:
  - name: Run tests
    run:
      image: cypress/some-incorrect-name:13.6.4
      args:
      - --env
      - NON_CYPRESS_ENV=NON_CYPRESS_ENV_value
      - --config
      - '{"screenshotsFolder":"/data/artifacts/screenshots","videosFolder":"/data/artifacts/videos"}'
      env:
      - name: CYPRESS_CUSTOM_ENV
        value: CYPRESS_CUSTOM_ENV_value
    artifacts:
      workingDir: /data/artifacts
      paths:
      - '**/*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-cypress-incorrect-workingdir
  labels:
    core-tests: expected-fail
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/cypress-13
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/
  steps:
  - name: Run tests
    run:
      image: cypress/included:13.6.4
      args:
      - --env
      - NON_CYPRESS_ENV=NON_CYPRESS_ENV_value
      - --config
      - '{"screenshotsFolder":"/data/artifacts/screenshots","videosFolder":"/data/artifacts/videos"}'
      env:
      - name: CYPRESS_CUSTOM_ENV
        value: CYPRESS_CUSTOM_ENV_value
    steps:
    - name: Saving artifacts
      workingDir: /data/artifacts
      artifacts:
        paths:
        - '**/*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-cypress-resource-limits # OOMKilled
  labels:
    core-tests: expected-fail
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/cypress-13
  container:
    resources:
      limits:
        cpu: 2
        memory: 50Mi
    workingDir: /data/repo/test/cypress/cypress-13
  steps:
  - name: Run tests
    run:
      image: cypress/included:13.6.4
      args:
      - --env
      - NON_CYPRESS_ENV=NON_CYPRESS_ENV_value
      - --config
      - '{"screenshotsFolder":"/data/artifacts/screenshots","videosFolder":"/data/artifacts/videos"}'
      env:
      - name: CYPRESS_CUSTOM_ENV
        value: CYPRESS_CUSTOM_ENV_value
    steps:
    - name: Saving artifacts
      workingDir: /data/artifacts
      artifacts:
        paths:
        - '**/*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-cypress-artifacts-condition-always-with-artifacts
  labels:
    core-tests: expected-fail
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/cypress-13
  container:
    resources:
      limits:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/cypress-13
  steps:
  - name: Run tests
    run:
      image: cypress/included:13.6.4
      args:
      - --config
      - '{"screenshotsFolder":"/data/artifacts/screenshots","videosFolder":"/data/artifacts/videos"}'
    steps:
    - name: Saving artifacts
      condition: always
      workingDir: /data/artifacts
      artifacts:
        paths:
        - '**/*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-k6-test-report-condition-always-no-artifacts
  labels:
    core-tests: expected-fail
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/k6/k6-smoke-test.js
  container:
    resources:
      requests:
        cpu: 128m
        memory: 128Mi
    workingDir: /data/repo/test/k6
  steps:
  - name: Run test
    container:
      image: grafana/k6:0.49.0
    steps:
    - shell: mkdir /data/artifacts
    - run:
        args:
        - run
        - some-incorrect-file-name.js
      steps:
      - name: Saving artifacts # should be run despite step failure
        condition: always
        workingDir: /data/artifacts
        artifacts:
          paths:
          - '*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-timeout-activedeadlineseconds
  labels:
    core-tests: expected-fail
spec:
  job:
    activeDeadlineSeconds: 1
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/k6/k6-smoke-test.js
  container:
    resources:
      requests:
        cpu: 128m
        memory: 128Mi
    workingDir: /data/repo/test/k6
  steps:
  - name: Run test
    run:
      image: grafana/k6:0.43.1
      args:
      - run
      - k6-smoke-test.js
      - -e
      - K6_ENV_FROM_PARAM=K6_ENV_FROM_PARAM_value
      env:
      - name: K6_SYSTEM_ENV
        value: K6_SYSTEM_ENV_value
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-timeout-step
  labels:
    core-tests: expected-fail
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/playwright/playwright-project
  container:
    image: mcr.microsoft.com/playwright:v1.32.3-focal
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/playwright/playwright-project
  steps:
  - name: Install dependencies
    shell: "npm ci"
  - name: Run tests
    timeout: 1s
    shell: "npx playwright test"
  - name: Save artifacts
    workingDir: /data/repo/test/playwright/playwright-project
    artifacts:
      paths:
      - playwright-report/**/*
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-private-registry-auth
  labels:
    core-tests: expected-fail
spec:
  container:
    resources:
      requests:
        cpu: 32m
        memory: 32Mi
  steps:
    - name: Run tests
      shell: curl -f -LI https://testkube-test-page-lipsum.pages.dev/ && sleep 10
      container:
        image: tkoniecznykubeshop/example-private-repo:curl-8.11.1
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-private-repo-auth
  labels:
    core-tests: expected-fail
spec:
  content:
    git:
      uri: https://github.com/kubeshop/some-example-repo
      revision: main
      paths:
      - test/postman/postman-executor-smoke.postman_collection.json
  container:
    resources:
      requests:
        cpu: 256m
        memory: 128Mi
    workingDir: /data/repo/test/postman
  steps:
  - name: Run test
    run:
      image: postman/newman:6-alpine
      args:
      - run
      - postman-executor-smoke.postman_collection.json
      - "--env-var"
      - "TESTKUBE_POSTMAN_PARAM=TESTKUBE_POSTMAN_PARAM_value"
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-missing-git-secret
  labels:
    core-tests: expected-fail
spec:
  content:
    git:
      uri: https://github.com/kubeshop/some-example-repo
      revision: main
      usernameFrom:
        secretKeyRef:
          name: non-existant-secret
          key: git-username
      tokenFrom:
        secretKeyRef:
          name: non-existant-secret2
          key: git-token
      paths:
      - test/postman/postman-executor-smoke.postman_collection.json
  container:
    resources:
      requests:
        cpu: 256m
        memory: 128Mi
    workingDir: /data/repo/test/postman
  steps:
  - name: Run test
    run:
      image: postman/newman:6-alpine
      shell: echo "The workflow should fail before executing this command"
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-missing-env-secret
  labels:
    core-tests: expected-fail
description: "Step fails due to non-existent secretKeyRef"
spec:
  container:
    image: alpine:3.22.0
    resources:
      requests:
        cpu: 64m
        memory: 64Mi
  steps:
    - name: Run step
      run:
        env:
          - name: EXAMPLE_SECRET_PARAM
            valueFrom:
              secretKeyRef:
                name: non-existent-secret
                key: some-key
        shell: echo "This step should fail before executing this command"
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-missing-configmap-key
  labels:
    core-tests: expected-fail
description: "Step fails due to non-existent configMapKeyRef"
spec:
  container:
    image: alpine:3.22.0
    resources:
      requests:
        cpu: 64m
        memory: 64Mi
  steps:
    - name: Run step
      run:
        env:
          - name: EXAMPLE_PARAM
            valueFrom:
              configMapKeyRef:
                name: non-existent-configmap
                key: some-key
        shell: echo "This step should fail before executing this command"
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-missing-template
  labels:
    core-tests: expected-fail
spec:
  job:
    activeDeadlineSeconds: 300
  steps:
  - name: Run from template
    content:
      git:
        uri: https://github.com/kubeshop/testkube
        revision: main
        paths:
        - test/artillery/artillery-smoke-test.yaml
    workingDir: /data/repo/test/artillery
    template:
      name: some-non-existant-template-name
      config:
        run: "echo 'test'"
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-service-exit-code # https://linear.app/kubeshop/issue/TKC-3897/
  labels:
    core-tests: expected-fail
spec:
  container:
    image: alpine:3.22.0
  services:
    slave:
      use:
      - name: distribute/evenly
      image: alpine:3.22.0
      logs: always
      count: 2
      shell: 'echo "expected fail - non-zero exit code" && exit 1'
  job:
    activeDeadlineSeconds: 30
  steps:
  - name: Step
    run:
      shell: 'echo "step"'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-step-retry
  labels:
    core-tests: expected-fail
description: "step retry (until step failed)"
spec:
  container:
    image: alpine:3.22.0
  job:
    activeDeadlineSeconds: 30
  steps:
  - name: Random pass/fail
    retry:
      count: 20
      until: self.failed
    shell: |
      code=$((RANDOM % 2))
      [[ $code -eq 0 ]] && echo "random - passed" || echo "random - failed"
      exit $code
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-negative-step
  labels:
    core-tests: expected-fail
description: "negative step passed - inverting step result to failed"
spec:
  container:
    image: alpine:3.22.0
  job:
    activeDeadlineSeconds: 30
  steps:
  - name: Step (passed before inverting)
    negative: true
    shell: |
      echo "command" && exit 0
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-volume-not-mounted
  labels:
    core-tests: expected-fail
description: "volumeMount references missing volume"
spec:
  container:
    image: alpine:3.22.0
    volumeMounts:
      - name: missing-volume
        mountPath: /non-existent
  steps:
    - name: Check directory
      shell: 'test -e /non-existent && echo FAIL && exit 1 || echo OK'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflowTemplate
metadata:
  name: expected-fail-required-config-template
spec:
  config:
    message:
      type: string
  steps:
    - name: Print message
      run:
        shell: echo "{{ config.message }}"
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-template-missing-config-options
  labels:
    core-tests: expected-fail
description: "Required template config missing"
spec:
  steps:
    - name: Missing required config
      template:
        name: expected-fail-required-config-template
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-template-not-defined-config-options
  labels:
    core-tests: expected-fail
description: "Not defined template config params passed"
spec:
  steps:
    - name: Missing required config
      template:
        name: expected-fail-required-config-template
        config:
          version: "asdf"
          other: "asdf"
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: expected-fail-service-readiness-probe
  labels:
    core-tests: expected-fail
description: "Service with failing readiness probe"
spec:
  services:
    broken-service:
      image: alpine:3.22.0
      shell: sleep 5
      readinessProbe:
        tcpSocket:
          port: 9999  # probe on cloded port
        initialDelaySeconds: 1
        timeoutSeconds: 1
        failureThreshold: 1
  steps:
    - name: Check
      shell: echo "Should not reach this step if probe fails as expected"