apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: cypress-workflow-smoke-14
  labels:
    core-tests: workflows
    tool: cypress
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/executor-tests/cypress-14
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/executor-tests/cypress-14
  steps:
  - name: Run tests
    run:
      image: cypress/included:14.0.3
      args:
      - --env
      - NON_CYPRESS_ENV=NON_CYPRESS_ENV_value
      - --config
      - '{"screenshotsFolder":"/data/artifacts/screenshots","videosFolder":"/data/artifacts/videos"}'
      env:
      - name: CYPRESS_CUSTOM_ENV
        value: CYPRESS_CUSTOM_ENV_value
    steps:
    - name: Saving artifacts
      workingDir: /data/artifacts
      artifacts:
        paths:
        - '**/*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: cypress-workflow-smoke-14-template
  labels:
    core-tests: workflows
    tool: cypress
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/executor-tests/cypress-14
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/executor-tests/cypress-14
    env:
    - name: CYPRESS_CUSTOM_ENV
      value: CYPRESS_CUSTOM_ENV_value
  steps:
  - name: Run from template
    template:
      name: official/cypress/v1
      config:
        version: 14.0.3
        run: "npx cypress run --env NON_CYPRESS_ENV=NON_CYPRESS_ENV_value --config '{\"screenshotsFolder\":\"/data/artifacts/screenshots\",\"videosFolder\":\"/data/artifacts/videos\"}'"
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: cypress-workflow-smoke-13
  labels:
    core-tests: workflows
    tool: cypress
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/executor-tests/cypress-13
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/executor-tests/cypress-13
  steps:
  - name: Run tests
    run:
      image: cypress/included:13.6.4
      args:
      - --env
      - NON_CYPRESS_ENV=NON_CYPRESS_ENV_value
      - --config
      - '{"screenshotsFolder":"/data/artifacts/screenshots","videosFolder":"/data/artifacts/videos"}'
      env:
      - name: CYPRESS_CUSTOM_ENV
        value: CYPRESS_CUSTOM_ENV_value
    steps:
    - name: Saving artifacts
      workingDir: /data/artifacts
      artifacts:
        paths:
        - '**/*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: cypress-workflow-smoke-13-video-recording-enabled
  labels:
    core-tests: workflows
    tool: cypress
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/executor-tests/cypress-13
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/executor-tests/cypress-13
  steps:
  - name: Run tests
    run:
      image: cypress/included:13.6.4
      args:
      - --env
      - NON_CYPRESS_ENV=NON_CYPRESS_ENV_value
      - --config
      - video=true
      env:
      - name: CYPRESS_CUSTOM_ENV
        value: CYPRESS_CUSTOM_ENV_value
    steps:
    - name: Saving artifacts
      workingDir: /data/repo/test/cypress/executor-tests/cypress-13/cypress/videos
      artifacts:
        paths:
        - '**/*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: cypress-workflow-smoke-13-negative
  labels:
    core-tests: workflows
    tool: cypress
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/executor-tests/cypress-13
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/executor-tests/cypress-13
  steps:
  - name: Run tests
    run:
      image: cypress/included:13.6.4
      args:
      - --env
      - NON_CYPRESS_ENV=NON_CYPRESS_ENV_value
      - --config
      - '{"screenshotsFolder":"/data/artifacts/screenshots","videosFolder":"/data/artifacts/videos"}'
    negative: true
  - name: Saving artifacts
    workingDir: /data/artifacts
    artifacts:
      paths:
      - '**/*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: cypress-workflow-smoke-13-template
  labels:
    core-tests: workflows
    tool: cypress
spec:
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/executor-tests/cypress-13
    env:
    - name: CYPRESS_CUSTOM_ENV # currently only possible on this level
      value: "CYPRESS_CUSTOM_ENV_value"
    - name: UV_USE_IO_URING # workaround for NPM being stuck
      value: "0"
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/executor-tests/cypress-13
  steps:
  - name: Run from template
    workingDir: /data/repo/test/cypress/executor-tests/cypress-13
    template:
      name: official/cypress/v1
      config:
        version: 13.5.0
        run: "npx cypress run --env NON_CYPRESS_ENV=NON_CYPRESS_ENV_value --config '{\"screenshotsFolder\":\"/data/artifacts/screenshots\",\"videosFolder\":\"/data/artifacts/videos\"}'"
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: cypress-workflow-smoke-13-template-checkout-on-step
  labels:
    core-tests: workflows
    tool: cypress
spec:
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/executor-tests/cypress-13
    env:
    - name: CYPRESS_CUSTOM_ENV # currently only possible on this level
      value: "CYPRESS_CUSTOM_ENV_value"
    - name: UV_USE_IO_URING # workaround for NPM being stuck
      value: "0"
  steps:
  - name: Run from template
    content:
      git:
        uri: https://github.com/kubeshop/testkube
        revision: main
        paths:
        - test/cypress/executor-tests/cypress-13
    workingDir: /data/repo/test/cypress/executor-tests/cypress-13
    template:
      name: official/cypress/v1
      config:
        version: 13.5.0
        run: "npx cypress run --env NON_CYPRESS_ENV=NON_CYPRESS_ENV_value --config '{\"screenshotsFolder\":\"/data/artifacts/screenshots\",\"videosFolder\":\"/data/artifacts/videos\"}'"
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: cypress-workflow-smoke-13-template-sub-step
  labels:
    core-tests: workflows
    tool: cypress
spec:
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/executor-tests/cypress-13
    env:
    - name: CYPRESS_CUSTOM_ENV # currently only possible on this level
      value: "CYPRESS_CUSTOM_ENV_value"
    - name: UV_USE_IO_URING # workaround for NPM being stuck
      value: "0"
  steps:
  - name: Run cypress test
    content:
      git:
        uri: https://github.com/kubeshop/testkube
        revision: main
        paths:
        - test/cypress/executor-tests/cypress-13
    steps:
    - name: Run from template
      workingDir: /data/repo/test/cypress/executor-tests/cypress-13
      template:
        name: official/cypress/v1
        config:
          version: 13.5.0
          run: "npx cypress run --env NON_CYPRESS_ENV=NON_CYPRESS_ENV_value --config '{\"screenshotsFolder\":\"/data/artifacts/screenshots\",\"videosFolder\":\"/data/artifacts/videos\"}'"
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: cypress-workflow-smoke-12.7.0
  labels:
    core-tests: workflows
    tool: cypress
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/executor-tests/cypress-12
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/executor-tests/cypress-12
  steps:
  - name: Run tests
    run:
      image: cypress/included:12.7.0
      args:
      - --env
      - NON_CYPRESS_ENV=NON_CYPRESS_ENV_value
      - --config
      - '{"screenshotsFolder":"/data/artifacts/screenshots","videosFolder":"/data/artifacts/videos"}'
      env:
      - name: CYPRESS_CUSTOM_ENV
        value: CYPRESS_CUSTOM_ENV_value
    steps:
    - name: Saving artifacts
      workingDir: /data/artifacts
      artifacts:
        paths:
        - '**/*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: cypress-workflow-smoke-13-junit-report
  labels:
    core-tests: workflows
    tool: cypress
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/executor-tests/cypress-13
  container:
    resources:
      requests:
        cpu: 2
        memory: 2Gi
    workingDir: /data/repo/test/cypress/executor-tests/cypress-13
  steps:
  - name: Run tests
    run:
      image: cypress/included:13.6.4
      args:
      - --env
      - NON_CYPRESS_ENV=NON_CYPRESS_ENV_value
      - --config
      - '{"screenshotsFolder":"/data/artifacts/screenshots","videosFolder":"/data/artifacts/videos"}'
      - --reporter
      - junit
      - --reporter-options
      - mochaFile=/data/artifacts/junit/junit-[hash].xml,toConsole=false
      env:
      - name: CYPRESS_CUSTOM_ENV
        value: CYPRESS_CUSTOM_ENV_value
    steps:
    - name: Saving artifacts
      workingDir: /data/artifacts
      artifacts:
        paths:
        - '**/*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: distributed-cypress-workflow-smoke-13
  labels:
    core-tests: workflows
    tool: cypress
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/executor-tests/cypress-13
  container:
    image: cypress/included:13.6.4
    workingDir: /data/repo/test/cypress/executor-tests/cypress-13
  steps:
  - name: Run tests
    parallel:
      maxCount: 2
      shards:
        testFiles: 'glob("cypress/e2e/**/*.js")'
      description: '{{ join(map(shard.testFiles, "relpath(_.value, \"cypress/e2e\")"), ", ") }}'
      transfer:
      - from: /data/repo
      fetch:
      - from: /data/artifacts
      container:
        resources:
          requests:
            cpu: 1
            memory: 1Gi
      run:
        args:
        - --env
        - NON_CYPRESS_ENV=NON_CYPRESS_ENV_value
        - --config
        - '{"video":true,"screenshotsFolder":"/data/artifacts/screenshots","videosFolder":"/data/artifacts/videos"}'
        - --spec
        - '{{ join(shard.testFiles, ",") }}'
        env:
        - name: CYPRESS_CUSTOM_ENV
          value: CYPRESS_CUSTOM_ENV_value
    artifacts:
      workingDir: /data/artifacts
      paths:
      - '**/*'
---
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: cypress-workflow-smoke-matrix-junit
  labels:
    core-tests: workflows
    tool: cypress
spec:
  content:
    git:
      uri: https://github.com/kubeshop/testkube
      revision: main
      paths:
      - test/cypress/executor-tests/cypress-13
  container:
    image: cypress/included:13.6.4
    workingDir: /data/repo/test/cypress/executor-tests/cypress-13
    resources:
      requests:
        cpu: 1
        memory: 1Gi
  steps:
  - name: Run tests
    parallel:
      matrix:
        browser: ['chrome', 'firefox']
      description: '{{ matrix.browser }} browser'
      transfer:
      - from: /data/repo
      fetch:
      - from: /data/artifacts
        to: /data/artifacts/{{ matrix.browser }}
      run:
        args:
        - '--browser'
        - '{{ matrix.browser }}'
        - --env
        - NON_CYPRESS_ENV=NON_CYPRESS_ENV_value
        - --reporter
        - junit
        - --reporter-options
        - mochaFile=/data/artifacts/junit/junit-[hash].xml,toConsole=false
        env:
        - name: CYPRESS_CUSTOM_ENV
          value: CYPRESS_CUSTOM_ENV_value
    artifacts:
      workingDir: /data/artifacts
      paths:
      - '**/*'
